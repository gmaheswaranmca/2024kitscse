Django app to submit the form having a number 
to find the square of the number. 

Step 1: Set Up Your Django Project
Assuming you have Python and Django installed, 
let's start by creating a new Django project and then an app within that project.

command prompt
````````````````````````
# Create a new Django project
django-admin startproject squareprj
cd squareprj

# Create a new Django app inside the project
python manage.py startapp squareapp
````````````````````````
Adjust the Django Project Structure:

Open settings.py and locate the INSTALLED_APPS section:

Edit calcprj/settings.py
````````````````````````
INSTALLED_APPS = [
    # other installed apps
    'squareapp',
]
````````````````````````
````````````````````````
import os
TEMPLATES = [
    {
        # other code 
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        # other code 
    },
]

Step 2: Create Templates
Templates are HTML files that Django renders to create the final web pages. 
Create a template file for our view:

Create a directory templates inside your app (calcapp/templates).
Inside this directory, create square.html:
````````````````````````
<form method="POST">
    {% csrf_token %}
    <div>
        <label for="num">number</label>
        <input type="text" id="num" 
            name="num" value="{{ num }}"/>
    </div>
    <div>
        <label for="result">Result</label>
        <input type="text" id="result" 
            name="result"  value="{{ result }}"/>
    </div>
    <button>Calculate Square</button>
</form>
````````````````````````

Step 3: Create a View
Views handle the logic of your application and interact with models and forms. 
Let's create a view that renders the form and processes the square calculation.

Edit squareapp/views.py:

````````````````````````
from django.shortcuts import render

# Create your views here.
def square(req):
    if req.method == "POST":
        num = int(req.POST["num"])
        result = num * num
    else:
        num = 0
        result = 0 
    return render(req,'square.html',{'num':num,
                                   'result':result})
````````````````````````

Step 4: Configure URLs
Finally, we need to define URLs so Django knows how to map URLs to views.

Edit squareprj/urls.py:
````````````````````````
from django.contrib import admin
from django.urls import path, include

from django.contrib import admin
from django.urls import path
from squareapp import views
urlpatterns = [
    path('square/',views.square),
    path('admin/', admin.site.urls),
]

````````````````````````
Step 5: Run the Development Server
Now, let's run the Django development server and test our application:

````````````````````````
python manage.py runserver
````````````````````````
Visit http://127.0.0.1:8000/square in your web browser. 
You should see the form to input a number. 
Enter the number, submit the form, and 
you should see the result "the square value" displayed.

Explanation
    Views (views.py): 
        The "square" view function handles both 
            rendering the form (GET request) and 
            processing the form submission (POST request). 
        It calculates the square of the number and 
        renders the result using the square.html template.
    Templates: 
        We created a template (square.html) 
            to render the form and display the result respectively.
    URLs: 
        Configured URL patterns to map the "square" view function 
        to the URL  "/square" of our application.

This setup should give you a basic understanding of how to create a form, 
process input, and display results using Django. 
You can expand upon this by adding more features or 
improving the user interface as per your requirements.


